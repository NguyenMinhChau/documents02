. CONTROLLER REGISTER (ĐĂNG KÝ -> GỬI OTP XÁC THỰC TÀI KHOẢN);
register: async (req, res) => {
  ...
  const date = Date.now();
  const activation_token = jwt.sign(
    {
        id: newUser._id,
        email: newUser.email,
        username: newUser.username,
        date,
    },
    process.env.JWT_ACCESS_TOKEN_SECRET,
    {
        expiresIn: '5m',
    }
  );
  // generater otp
  const otp = otpGenerator.generate(6, {
    lowerCaseAlphabets: false,
    upperCaseAlphabets: false,
    specialChars: false,
  });
  const verify = new VerifyAccount({ // $MODEL VerifyAccount
    code: otp,
    email: newUser.email,
    token: activation_token,
    date,
  });
  await newUser.save();
  verify
    .save()
    .then((f) => {
        if (f) {
            const mailContentActivation = `$HTML`;
            let resultSendMail = sendMailFunc(
                newUser.email,
                mailContentActivation,
                `TITLE - Xác thực cho tài khoản @${newUser.email}`
            );
            resultSendMail
                .then((val) => {
                    return res.json({
                        code: 0,
                        message: `Send mail for verify account successfully to email = ${newUser.email}`,
                    });
                })
                .catch((err) => {
                    return res.json({
                        code: 1,
                        message: err?.message,
                    });
                });
        } else {
            return res.json({
                code: 2,
                message: `Can not save model verify account of user with email = ${newUser.email}`,
            });
        }
    })
    .catch((err) => {
        return res.json({
            code: 1,
            message: err?.message,
        });
    });
  ...
}