https://mongoosejs.com/docs/api/model.html
1. CHI TIẾT | /:slug
const item = $Model.findOne({$FIELD_IN_DB: req.params.slug})

2. TẠO MỚI
+ Tạo view create: views/create
+ Tạo router match với view (VD: course/create). Router này chỉ dùng hiện view
+ Tạo router dùng để submit form (VD: course/store). Router này dùng để tạo mới
+ Bên view: <form method='POST' actions='/course/store'>...</form>
+ Controller xử lý tạo mới:
	const itemNew = new $MODEL(req.body);
	itemNew.save().then(() => res.redirect('/')); //CHÚ Ý CÁC TRƯỜNG TRONG req.body ĐÃ CÓ TRONG $MODEL HAY CHƯA

3. CẬP NHẬT
+ Tạo view chứa thông tin đối tượng muốn cập nhật: views/update/:id
+ Tạo router match với view (views/update/:id). Đổ các trường dữ liệu lên form chỉnh sửa thông qua controller xử lý.
$MODEL.findById(req.params.id).then(item => res.render('...', {item}));
+ Bên view: <form id='form' method='POST' actions='/course/store/id'>...</form>
**FORM CHỈ HỖ TRỢ ĐƯỢC 2 PHƯƠNG THỨC GET,POST. NẾU MUỐN CẬP NHẬT THÌ PHẢI DÙNG METHOD-OVERRIDE VÀ FORM DÙNG METHOD='POST'**
+ Dùng method-override: npm i method-override (giúp chuyển đổi phương thức submit)
+ Tại src/index.js: 
	const methodOverride = require('method-override')
	app.use(methodOverride('_method'))
+ Bên view: <form id='form' method='POST' actions='/course/store/id?_method=PUT'>...</form>
+ Tạo router dùng để submit form (VD: course/store/:id). Router này dùng để cập nhật với phương thức PUT.
+ Controller xử lý update:
$MODEL.updateOne({_id: req.params.id}, req.body)
.then(() => res.redirect('/me/object')).catch(next);

4. XÓA ĐỐI TƯỢNG
+ Bấm button delete -> Hiện modal xác nhận -> Bấm button confirm modal thì mới xóa (tăng trải nghiệm người dùng)
+ Bên view tạo FORM ẨN: <form name='hidden_form' method='POST'>KHÔNG CHỨA CONTENT</form>
+ Tạo router dùng để submit form (VD: course/store/delete/:id). Router này dùng để xóa với phương thức DELETE.
+ Controller xử lý delete:
$MODEL.deleteOne({_id: req.params.id})
.then(() => res.redirect('/me/object')).catch(next);
+ Dùng hàm JAVASCRIPT xử lý bấm button confirm modal xóa.
  . Bấm vào button xóa (đặt attribute data-id='_id') phải lấy được id đối tượng khi hiện modal
  . Viết script xử lý.
  <script>
    document.addEventListener('DOMContentLoaded', function() {
        var id;
        var buttonDelete = document.getElementById('buttonDelete')
        var buttonModal = document.getElementById('buttonModal');
        var hidden_form = document.forms['name_form']

        buttonDelete.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget
            id = button.getAttribute('data-id')
        })
        buttonModal.onClick(() => {
            hidden_form.action = '/course/delete/' + id + '?_method=DELETE';
            hidden_form.submit();
        })
    });
  </script>



